ARMV30MZ To do
--------------

	Figure out how Zero flag is set during division exception.
	Move REPE/REPNE (0xF2/0xF3) logic to normal instructions and test flags there.
	Make all rep instructions able to recognize interrupts.
	Add fetchforce for ops setting SS (MOV SREGW (0x8E), (POP SS done)).
	Segment wrapping eats extra cycles? At least for LDS.
	Log opcode for undefined instructions.
	Make SRegs access different code paths for each reg.
	Prepare (C8) uses r4-r8, (r8 = SP).
	Interrupt uses r4-r6, (r6 = SP).
	Rename more opcodes.

	Buslock is used with REP and hinders interrupts until finished.
	* Break in REPE/REPNE (0xF2/0xF3) to see if any games use BUSLOCK.
	Make 26, 2E, 36 & 3E share code?
